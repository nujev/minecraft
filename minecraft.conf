server {
    listen 80;
    return 301 https://$host$request_uri;
}
server {
    listen 443 ssl; # managed by Certbot
    server_name minecraft.nujev.com;

    ssl_certificate /etc/letsencrypt/live/minecraft.nujev.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/minecraft.nujev.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    access_log /var/log/nginx/minecraft.nujev.com.access.log;
    error_log /var/log/nginx/minecraft.nujev.com.error.log;

    root /usr/share/nginx/web;
    auth_basic "BlueMap";
    auth_basic_user_file /etc/nginx/conf.d/.htpasswd; 


    location /maps/ {
    # All high-res tile data and some json data is precompressed into *.gz files
    gzip_static always;

    # Return 204 No Content if requesting a missing tile
    location ~* ^/maps/[^/]*/tiles/ {
      error_page 404 = @no-content;
    }

    # Proxy all requests for live data to the integrated webserver.
    # Fall back to @server-offline if it can't be contacted.
    location ~* ^/maps/[^/]*/live/ {
      proxy_read_timeout 2s;  # required if lazymc pauses the server instead of shutting it down
      error_page 502 504 = @server-offline;
      proxy_pass http://127.0.0.1:8100;  # the default port for the integrated webserver, adapt to your setup
    }
  }

  location @no-content {
    internal;
    return 204;
  }

  # Serve "live" data from the disk when the integrated webserver can't be reached
  location @server-offline {
    internal;
    try_files $uri =204;
  }
}
